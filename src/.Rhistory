enw_latest_data() #|>
plot(nowcast, latest_obs = latest_tab)
data_tab
data_tab = data.table(result_df)
data_tab = data_tab |> enw_filter_reference_dates(earliest_date = target_date - 30, latest_date = target_date) |> enw_filter_report_dates(latest_date = target_date + 40)
data_tab
data_tab = enw_complete_dates(data_tab, max_delay = 40)
data_tab
?enw_complete_dates
data_tab[is.na(report_date)]
data_tab[report_date, is.na(report_date)]
data_tab[report_date]
data_tab["report_date"]
data_tab$report_date
data_tab$confirm
data_tab
data_tab = data-tab[!is.na(reference_date) & !is.na(report_date)]
data_tab = data_tab[!is.na(reference_date) & !is.na(report_date)]
data_tab
latest_tab <- data_tab |>
enw_latest_data() #|>
pobs <- enw_preprocess_data(data_tab, max_delay = 40)
expectation_module <- enw_expectation(
~ 0 + (1 | day), data = pobs
)
reference_module <- enw_reference(~1, distribution = "lognormal", data = pobs)
report_module <- enw_report(~ (1 | day_of_week), data = pobs)
model <- enw_model(threads = TRUE)
options(mc.cores = 2)
nowcast <- epinowcast(data = pobs,
expectation = expectation_module,
reference = reference_module,
report = report_module,
fit = enw_fit_opts(
save_warmup = FALSE, pp = TRUE,
chains = 2, threads_per_chain = 2,
iter_sampling = 500, iter_warmup = 250,
show_messages = T
),
model = model
)
plot(nowcast, latest_obs = latest_tab)
data_tab
target_date + 40
retro_tab <- data_tab |>
enw_filter_report_dates(remove_days = 0) |>
enw_filter_reference_dates(include_days = 30)
retro_tab
retro_tab <- data_tab |>
enw_filter_report_dates(remove_days = 0) |>
enw_filter_reference_dates(include_days = 0)
retro_tab
retro_tab <- data_tab |>
enw_filter_report_dates(remove_days = 0) |>
enw_filter_reference_dates(include_days = 30)
retro_tab
data_tab = data.table(result_df)
data_tab = data_tab |> enw_filter_reference_dates(earliest_date = target_date - 30, latest_date = target_date) |> enw_filter_report_dates(latest_date = target_date)
data_tab
data_tab = enw_complete_dates(data_tab, max_delay = 40)
retro_tab <- data_tab |>
enw_filter_report_dates(remove_days = 0) |>
enw_filter_reference_dates(include_days = 30)
retro_tab
latest_tab <- data_tab |>
enw_latest_data() #|>
pobs <- enw_preprocess_data(data_tab, max_delay = 40)
expectation_module <- enw_expectation(
~ 0 + (1 | day), data = pobs
)
reference_module <- enw_reference(~1, distribution = "lognormal", data = pobs)
report_module <- enw_report(~ (1 | day_of_week), data = pobs)
model <- enw_model(threads = TRUE)
options(mc.cores = 2)
nowcast <- epinowcast(data = pobs,
expectation = expectation_module,
reference = reference_module,
report = report_module,
fit = enw_fit_opts(
save_warmup = FALSE, pp = TRUE,
chains = 2, threads_per_chain = 2,
iter_sampling = 500, iter_warmup = 250,
show_messages = T
),
model = model
)
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = latest_tab)
pobs <- enw_preprocess_data(retro_tab, max_delay = 40)
retro_tab <- data_tab |>
enw_filter_report_dates(remove_days = 0) |>
enw_filter_reference_dates(include_days = 40)
latest_tab <- data_tab |>
enw_latest_data() #|>
pobs <- enw_preprocess_data(retro_tab, max_delay = 40)
expectation_module <- enw_expectation(
~ 0 + (1 | day), data = pobs
)
reference_module <- enw_reference(~1, distribution = "lognormal", data = pobs)
report_module <- enw_report(~ (1 | day_of_week), data = pobs)
model <- enw_model(threads = TRUE)
options(mc.cores = 2)
nowcast <- epinowcast(data = pobs,
expectation = expectation_module,
reference = reference_module,
report = report_module,
fit = enw_fit_opts(
save_warmup = FALSE, pp = TRUE,
chains = 2, threads_per_chain = 2,
iter_sampling = 500, iter_warmup = 250,
show_messages = T
),
model = model
)
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = latest_tab)
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = latest_tab)
latest_tab <- data_tab |>
enw_latest_data() #|>
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = latest_tab)
pobs
data_tab = data.table(result_df)
data_tab = data_tab |> enw_filter_report_dates(latest_date = target_date) # first enw_filter_reference_dates(earliest_date = target_date - 30, latest_date = target_date)
data_tab
data_tab = enw_complete_dates(data_tab, max_delay = 40)
retro_tab <- data_tab |>
enw_filter_report_dates(remove_days = 0) |>
enw_filter_reference_dates(include_days = 40)
retro_tab
latest_tab <- data_tab |>
enw_latest_data() #|>
pobs <- enw_preprocess_data(retro_tab, max_delay = 40)
expectation_module <- enw_expectation(
~ 0 + (1 | day), data = pobs
)
reference_module <- enw_reference(~1, distribution = "lognormal", data = pobs)
report_module <- enw_report(~ (1 | day_of_week), data = pobs)
model <- enw_model(threads = TRUE)
options(mc.cores = 2)
nowcast <- epinowcast(data = pobs,
expectation = expectation_module,
reference = reference_module,
report = report_module,
fit = enw_fit_opts(
save_warmup = FALSE, pp = TRUE,
chains = 2, threads_per_chain = 2,
iter_sampling = 500, iter_warmup = 250,
show_messages = T
),
model = model
)
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = latest_tab)
data_tab = data_tab |> enw_filter_report_dates(latest_date = target_date, earliest_date = target_date - 30) # first enw_filter_reference_dates(earliest_date = target_date - 30, latest_date = target_date)
data_tab = data_tab |> enw_filter_report_dates(latest_date = target_date) |> enw_filter_reference_dates(latest_date = target_date, include_days = 30) # first enw_filter_reference_dates(earliest_date = target_date - 30, latest_date = target_date)
data_tab
data_tab = enw_complete_dates(data_tab, max_delay = 40)
latest_tab <- data_tab |>
enw_latest_data() #|>
pobs <- enw_preprocess_data(data_tab, max_delay = 40)
expectation_module <- enw_expectation(
~ 0 + (1 | day), data = pobs
)
reference_module <- enw_reference(~1, distribution = "lognormal", data = pobs)
report_module <- enw_report(~ (1 | day_of_week), data = pobs)
model <- enw_model(threads = TRUE)
options(mc.cores = 2)
nowcast <- epinowcast(data = pobs,
expectation = expectation_module,
reference = reference_module,
report = report_module,
fit = enw_fit_opts(
save_warmup = FALSE, pp = TRUE,
chains = 2, threads_per_chain = 2,
iter_sampling = 500, iter_warmup = 250,
show_messages = T
),
model = model
)
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = latest_tab)
# Target date needs to be final date of reports NOT end of reference dates directly
target_date = as.Date("2015-03-16") + 40
# Target date needs to be final date of reports NOT end of reference dates directly
target_date = as.Date("2015-03-16")
# Target date needs to be final date of reports NOT end of reference dates directly
target_date = as.Date("2015-03-16")
data_tab = data.table(result_df)
data_tab = data_tab |> enw_filter_report_dates(latest_date = target_date+40)# |> enw_filter_reference_dates(latest_date = target_date, include_days = 30) # first enw_filter_reference_dates(earliest_date = target_date - 30, latest_date = target_date)
data_tab = enw_complete_dates(data_tab, max_delay = 40)
retro_tab  <- data_tab |>
enw_filter_report_dates(remove_days = 40) |>
enw_filter_reference_dates(include_days = 40)
retro_tab  <- data_tab |>
enw_filter_report_dates(remove_days = 40) |>
enw_filter_reference_dates(include_days = 40)
latest_tab <- data_tab |>
enw_latest_data() |>
enw_filter_reference_dates(remove_days = 40, include_days = 40)
pobs <- enw_preprocess_data(retro_tab, max_delay = 40)
expectation_module <- enw_expectation(
~ 0 + (1 | day), data = pobs
)
reference_module <- enw_reference(~1, distribution = "lognormal", data = pobs)
report_module <- enw_report(~ (1 | day_of_week), data = pobs)
model <- enw_model(threads = TRUE)
options(mc.cores = 2)
nowcast <- epinowcast(data = pobs,
expectation = expectation_module,
reference = reference_module,
report = report_module,
fit = enw_fit_opts(
save_warmup = FALSE, pp = TRUE,
chains = 2, threads_per_chain = 2,
iter_sampling = 500, iter_warmup = 250,
show_messages = T
),
model = model
)
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = latest_tab)
data_tab = data.table(result_df)
data_tab = data_tab |> enw_filter_report_dates(latest_date = target_date+40)# |> enw_filter_reference_dates(latest_date = target_date, include_days = 30) # first enw_filter_reference_dates(earliest_date = target_date - 30, latest_date = target_date)
retro_tab  <- data_tab |>
enw_filter_report_dates(remove_days = 40) |>
enw_filter_reference_dates(include_days = 40)
latest_tab <- data_tab |>
enw_latest_data() |>
enw_filter_reference_dates(remove_days = 40, include_days = 40)
pobs <- enw_preprocess_data(retro_tab, max_delay = 40)
expectation_module <- enw_expectation(
~ 0 + (1 | day), data = pobs
)
reference_module <- enw_reference(~1, distribution = "lognormal", data = pobs)
report_module <- enw_report(~ (1 | day_of_week), data = pobs)
model <- enw_model(threads = TRUE)
options(mc.cores = 2)
nowcast <- epinowcast(data = pobs,
expectation = expectation_module,
reference = reference_module,
report = report_module,
fit = enw_fit_opts(
save_warmup = FALSE, pp = TRUE,
chains = 2, threads_per_chain = 2,
iter_sampling = 500, iter_warmup = 250,
show_messages = T
),
model = model
)
data_tab = data.table(result_df)
data_tab = data_tab |> enw_filter_report_dates(latest_date = target_date+40)# |> enw_filter_reference_dates(latest_date = target_date, include_days = 30) # first enw_filter_reference_dates(earliest_date = target_date - 30, latest_date = target_date)
data_tab = enw_complete_dates(data_tab, max_delay = 40)
?enw_latest_data
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = retro_tab)
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = latest_tab)
latest_tab
?epinowcast::plot.epinowcast
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast)#, latest_obs = latest_tab)
retro_tab
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast), latest_obs = retro_tab)
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = retro_tab)
latest_tab <- data_tab |>
enw_latest_data()# |>
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = retro_tab)
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = latest_tab)
latest_tab <- data_tab |>
enw_latest_data() |>
enw_filter_reference_dates(remove_days = 40, include_days = 50)
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = latest_tab)
latest_tab
data_tab
data_tab[(reference_date > target_date - 40) & (reference_date <= target_date)]
on_day_tab = data_tab[(reference_date > target_date - 40) & (reference_date <= target_date)]
on_day_tab[, sum(confirm), by = report_date]
on_day_tab = data_tab[(reference_date > target_date - 40) & (reference_date <= target_date)]
on_day_tab[, sum(confirm), by = reference_date]
setnames(dt1, c("V1"), c("confirm"))
setnames(on_day_tab, c("V1"), c("confirm"))
setnames(on_day_tab, "V1", "confirm")
on_day_tab.names
on_day_tab = on_day_tab[, sum(confirm), by = reference_date]
setnames(on_day_tab, "V1", "confirm")
on_day_tab
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = on_day_tab)
retro_tab
retro_on_day = retro_tab[, sum(confirm), by = reference_date]
setnames(retro_on_day, "V1", "confirm")
retro_on_day
inner_join(retro_on_day, on_day_tab, by="reference_date")
# Target date needs to be final date of reports NOT end of reference dates directly
target_date = as.Date("2014-03-16")
data_tab = data.table(result_df)
data_tab = data_tab |> enw_filter_report_dates(latest_date = target_date+40)# |> enw_filter_reference_dates(latest_date = target_date, include_days = 30) # first enw_filter_reference_dates(earliest_date = target_date - 30, latest_date = target_date)
data_tab = enw_complete_dates(data_tab, max_delay = 40)
retro_tab  <- data_tab |>
enw_filter_report_dates(remove_days = 40) |>
enw_filter_reference_dates(include_days = 40) # hat as available on day
# Soll wahrscheinlich available looking back plotten,
# Ergo pro reference date group by und count?
latest_tab <- data_tab |>
enw_latest_data() |>
enw_filter_reference_dates(remove_days = 40, include_days = 50)
on_day_tab = data_tab[(reference_date > target_date - 40) & (reference_date <= target_date)]
on_day_tab = on_day_tab[, sum(confirm), by = reference_date]
setnames(on_day_tab, "V1", "confirm")
retro_on_day = retro_tab[, sum(confirm), by = reference_date]
setnames(retro_on_day, "V1", "confirm")
pobs <- enw_preprocess_data(retro_tab, max_delay = 40)
expectation_module <- enw_expectation(
~ 0 + (1 | day), data = pobs
)
reference_module <- enw_reference(~1, distribution = "lognormal", data = pobs)
report_module <- enw_report(~ (1 | day_of_week), data = pobs)
model <- enw_model(threads = TRUE)
options(mc.cores = 2)
nowcast <- epinowcast(data = pobs,
expectation = expectation_module,
reference = reference_module,
report = report_module,
fit = enw_fit_opts(
save_warmup = FALSE, pp = TRUE,
chains = 2, threads_per_chain = 2,
iter_sampling = 500, iter_warmup = 250,
show_messages = T
),
model = model
)
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = on_day_tab)
nowcast <- epinowcast(data = pobs,
expectation = expectation_module,
reference = reference_module,
report = report_module,
fit = enw_fit_opts(
save_warmup = FALSE, pp = TRUE,
chains = 4, threads_per_chain = 2,
iter_sampling = 500, iter_warmup = 500,
show_messages = T
),
model = model
)
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = on_day_tab)
cumulative_count_combinations <- function(df) {
df %>%
group_by(reference_date, report_date) %>%
summarize(confirm = n()) %>%
arrange(reference_date, report_date) %>%
mutate(cumulative_confirm = cumsum(confirm)) %>%
ungroup()
}
cum_df <- cumulative_count_combinations(filtered_df)
cum_df
setorderv(cum_df, cols = c("reference_date", "report_date"))
cum_df
print(cum_df, n = 100)
print(cum_df[reference_date > as.Date("2015-01-01")], n = 100)
print(data.table(cum_df[reference_date > as.Date("2015-01-01")], n = 100))
cum_dt = data.table(cum_df)
print(cum_df[reference_date > as.Date("2015-01-01")], n = 100)
print(cum_dt[reference_date > as.Date("2015-01-01")], n = 100)
result_df = cum_df[c("reference_date", "report_date", "cumulative_confirm")]
result_df = rename(result_df, confirm = cumulative_confirm)
result_df$reference_date <- as.IDate(result_df$reference_date)
result_df$report_date    <- as.IDate(result_df$report_date)
# Target date needs to be final date of reports NOT end of reference dates directly
target_date = as.Date("2015-03-16")
data_tab = data.table(result_df)
data_tab = data_tab |> enw_filter_report_dates(latest_date = target_date+40)# |> enw_filter_reference_dates(latest_date = target_date, include_days = 30) # first enw_filter_reference_dates(earliest_date = target_date - 30, latest_date = target_date)
data_tab = enw_complete_dates(data_tab, max_delay = 40)
retro_tab  <- data_tab |>
enw_filter_report_dates(remove_days = 40) |>
enw_filter_reference_dates(include_days = 40) # hat as available on day correctly
# Soll wahrscheinlich available looking back plotten,
# Ergo pro reference date group by und count?
latest_tab <- data_tab |>
enw_latest_data() |>
enw_filter_reference_dates(remove_days = 40, include_days = 40)
pobs <- enw_preprocess_data(retro_tab, max_delay = 40)
expectation_module <- enw_expectation(
~ 0 + (1 | day), data = pobs
)
reference_module <- enw_reference(~1, distribution = "lognormal", data = pobs)
report_module <- enw_report(~ (1 | day_of_week), data = pobs)
model <- enw_model(threads = TRUE)
options(mc.cores = 2)
nowcast <- epinowcast(data = pobs,
expectation = expectation_module,
reference = reference_module,
report = report_module,
fit = enw_fit_opts(
save_warmup = FALSE, pp = TRUE,
chains = 4, threads_per_chain = 2,
iter_sampling = 500, iter_warmup = 500,
show_messages = T
),
model = model
)
parallel::detectCores()
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = on_day_tab)
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = latest_tab)
options(mc.cores = 8) # usable cores
nowcast <- epinowcast(data = pobs,
expectation = expectation_module,
reference = reference_module,
report = report_module,
fit = enw_fit_opts(
save_warmup = FALSE, pp = TRUE,
chains = 4, threads_per_chain = 2,
iter_sampling = 500, iter_warmup = 250,
show_messages = T
),
model = model
)
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = latest_tab)
samples <- summary(nowcast, type="nowcast_samples")
samples[samples$reference_date = "2015-02-05"]
samples[samples$reference_date == "2015-02-05"]
samples[samples$reference_date == target_date]
nowcast <- epinowcast(data = pobs,
expectation = expectation_module,
reference = reference_module,
report = report_module,
fit = enw_fit_opts(
save_warmup = FALSE, pp = TRUE,
chains = 2, threads_per_chain = 2,
iter_sampling = 500, iter_warmup = 250,
show_messages = T
),
model = model
)
# Looks like only starts nowcasting from reference target date (latest_date) onwards
# Obviously not recorded bc not included in reference dates anymore
plot(nowcast, latest_obs = latest_tab)
samples <- summary(nowcast, type="nowcast_samples") # have chains * iter_sampling samples
## Use samples for quantiles, min, max (width) and all criteria
samples[samples$reference_date == target_date]$sample
samples[samples$reference_date == target_date]
## Use samples for quantiles, min, max (width) and all criteria
target_samples = samples[samples$reference_date == target_date]$sample
quantile(target_samples, probs = levels)
quantiles(target_samples, probs = levels)
quantile(target_samples, probs = levels, na.rm=TRUE)
quantile(as.numeric(target_samples), probs = levels, na.rm=TRUE)
target_samples
class(target_samples)
length(target_samples)
## Get true observation from on_day_tab OR calculate once and have per target date in df, 28xx entries, just use
levels = c(0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95)
quantile(target_samples, probs = levels, na.rm=TRUE)
## Get true observation from on_day_tab OR calculate once and have per target date in df, 28xx entries, just use
levels = c(0, 0.05, 0.1, 0.25, 0.5, 0.75, 0.9, 0.95, 1)
quantile(target_samples, probs = levels, na.rm=TRUE)
qtiles = quantile(target_samples, probs = levels, na.rm=TRUE)
## Theoretisch könnte einfach quantiles pro target date storen, dann mit allen anderen zsm auswerten und benutzen, einfach ein CSV
qtiles[1]
## Theoretisch könnte einfach quantiles pro target date storen, dann mit allen anderen zsm auswerten und benutzen, einfach ein CSV
quantile_table = data.table(date = target_date, 0 = qtiles[1], 0.05 = qtiles[2], 0.1 = qtiles[3], 0.25 = qtiles[4], 0.5 = qtiles[5], 0.75 = qtiles[6], 0.9 = qtiles[7], 0.95 = qtiles[8], 1 = qtiles[9])
## Theoretisch könnte einfach quantiles pro target date storen, dann mit allen anderen zsm auswerten und benutzen, einfach ein CSV
quantile_table = data.table(date = target_date, "0" = qtiles[1], "0.05" = qtiles[2], "0.1" = qtiles[3], "0.25" = qtiles[4], "0.5" = qtiles[5], "0.75" = qtiles[6], "0.9" = qtiles[7], "0.95" = qtiles[8], "1" = qtiles[9])
quantile_table = rbindlist(list(quantile_table, list(1:9)))
quantile_table = rbindlist(list(quantile_table, as.list(1:9)))
1:9
list(1:9)
quantile_table = rbindlist(list(quantile_table, 1:9))
quantile_table = rbindlist(list(quantile_table, data.table(1:9))
quantile_table = rbindlist(list(quantile_table, as.list(1:9))
quantile_table = rbindlist(list(quantile_table, as.list(1:9)))
quantile_table = rbindlist(list(quantile_table, data.table(1:9)))
c(target_date, qtiles)
qtiles
c(target_date, unname(qtiles))
cbind(target_date, qtiles)
class(qtiles)
length(qtiles)
c(qtiles, target_date)
c(unname(qtiles), target_date)
