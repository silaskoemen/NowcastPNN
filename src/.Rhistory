full_data <- read_csv("/Users/silaskoemen/Documents/Projects/UCLA/1710000901-eng.csv", skip = 8, n_max = 15, col_names = TRUE) %>%
slice(-1) %>% # remove the line indicating persons per quarter
select(-`Q4 1999`) # December of 1999 not needed for analysis, can drop
# Function to convert quarter to date
quarter_to_date <- function(quarter) {
year <- as.numeric(str_extract(quarter, "\\d{4}"))
month_mapping <- c("Q1" = 1, "Q2" = 4, "Q3" = 7, "Q4" = 10)
month <- month_mapping[str_extract(quarter, "Q[1-4]")]
return(paste0(year, "-", sprintf("%02d", month), "-01"))
}
# Function to extract year from date
extract_year <- function(date) {
as.numeric(str_extract(date, "\\d{4}"))
}
# Function to convert population to float
float_pop <- function(pop) {
as.numeric(gsub(",", "", pop))
}
# Function to create dates and additional columns
create_dates <- function(df) {
df <- df %>%
rename(DATE = 1, Quarterly_Pop = 2) %>%
mutate(Quarterly_Pop = float_pop(Quarterly_Pop),
DATE = quarter_to_date(DATE),
Year = extract_year(DATE),
DATE = ymd(DATE))
return(df)
}
# Function to create knotted points
knotted_point <- function(df) {
seq(2, by = 3, length.out = nrow(df))
}
# Process each area
for (i in seq_along(full_data$Geography)) {
area <- full_data$Geography[i]
print(area)
df <- full_data[i, ] %>% t() %>% as.data.frame() %>% create_dates()
df$Knotted_Point <- knotted_point(df)
df_annual <- df %>%
select(-DATE) %>%
group_by(Year) %>%
summarise(across(everything(), mean, na.rm = TRUE)) %>%
ungroup()
df$Desired_Point <- seq(1, nrow(df))
df$Estimated_Pop <- rep(NA, nrow(df))
df_annual$Desired_Point <- seq(1, nrow(df_annual))
df_annual$Estimated_Pop <- rep(NA, nrow(df_annual))
print(df_annual)
# Save to Stata and CSV
# write_dta(df, paste0(gsub(" ", "_", area), "_Quarterly.dta"))
# write_dta(df_annual, paste0(gsub(" ", "_", area), "_Annual.dta"))
# write_csv(df, paste0(gsub(" ", "_", area), "_Quarterly.csv"))
# write_csv(df_annual, paste0(gsub(" ", "_", area), "_Annual.csv"))
}
# Process each area
for (i in seq_along(full_data$Geography)) {
area <- full_data$Geography[i]
print(full_data[i, ])
df <- full_data[i, ] %>% t() %>% as.data.frame() %>% create_dates()
df$Knotted_Point <- knotted_point(df)
df_annual <- df %>%
select(-DATE) %>%
group_by(Year) %>%
summarise(across(everything(), mean, na.rm = TRUE)) %>%
ungroup()
df$Desired_Point <- seq(1, nrow(df))
df$Estimated_Pop <- rep(NA, nrow(df))
df_annual$Desired_Point <- seq(1, nrow(df_annual))
df_annual$Estimated_Pop <- rep(NA, nrow(df_annual))
print(df_annual)
# Save to Stata and CSV
# write_dta(df, paste0(gsub(" ", "_", area), "_Quarterly.dta"))
# write_dta(df_annual, paste0(gsub(" ", "_", area), "_Annual.dta"))
# write_csv(df, paste0(gsub(" ", "_", area), "_Quarterly.csv"))
# write_csv(df_annual, paste0(gsub(" ", "_", area), "_Annual.csv"))
}
# Process each area
for (i in seq_along(full_data$Geography)) {
area <- full_data$Geography[i]
print(full_data[i, ]%>% t())
df <- full_data[i, ] %>% t() %>% as.data.frame() %>% create_dates()
df$Knotted_Point <- knotted_point(df)
df_annual <- df %>%
select(-DATE) %>%
group_by(Year) %>%
summarise(across(everything(), mean, na.rm = TRUE)) %>%
ungroup()
df$Desired_Point <- seq(1, nrow(df))
df$Estimated_Pop <- rep(NA, nrow(df))
df_annual$Desired_Point <- seq(1, nrow(df_annual))
df_annual$Estimated_Pop <- rep(NA, nrow(df_annual))
print(df_annual)
# Save to Stata and CSV
# write_dta(df, paste0(gsub(" ", "_", area), "_Quarterly.dta"))
# write_dta(df_annual, paste0(gsub(" ", "_", area), "_Annual.dta"))
# write_csv(df, paste0(gsub(" ", "_", area), "_Quarterly.csv"))
# write_csv(df_annual, paste0(gsub(" ", "_", area), "_Annual.csv"))
}
# Process each area
for (i in seq_along(full_data$Geography)) {
area <- full_data$Geography[i]
df <- full_data[i, ] %>% t() %>% as.data.frame()
df <- cbind(newColName = rownames(df), df)
rownames(df) <- 1:nrow(df)
print(df)
df = create_dates(df)
df$Knotted_Point <- knotted_point(df)
df_annual <- df %>%
select(-DATE) %>%
group_by(Year) %>%
summarise(across(everything(), mean, na.rm = TRUE)) %>%
ungroup()
df$Desired_Point <- seq(1, nrow(df))
df$Estimated_Pop <- rep(NA, nrow(df))
df_annual$Desired_Point <- seq(1, nrow(df_annual))
df_annual$Estimated_Pop <- rep(NA, nrow(df_annual))
print(df_annual)
# Save to Stata and CSV
# write_dta(df, paste0(gsub(" ", "_", area), "_Quarterly.dta"))
# write_dta(df_annual, paste0(gsub(" ", "_", area), "_Annual.dta"))
# write_csv(df, paste0(gsub(" ", "_", area), "_Quarterly.csv"))
# write_csv(df_annual, paste0(gsub(" ", "_", area), "_Annual.csv"))
}
View(full_data)
# Function to convert population to float
float_pop <- function(pop) {
as.numeric( pop)
}
# Function to create dates and additional columns
create_dates <- function(df) {
df <- df %>%
rename(DATE = 1, Quarterly_Pop = 2) %>%
mutate(Quarterly_Pop = float_pop(Quarterly_Pop),
DATE = quarter_to_date(DATE),
Year = extract_year(DATE),
DATE = ymd(DATE))
return(df)
}
# Function to create knotted points
knotted_point <- function(df) {
seq(2, by = 3, length.out = nrow(df))
}
# Process each area
for (i in seq_along(full_data$Geography)) {
area <- full_data$Geography[i]
df <- full_data[i, ] %>% t() %>% as.data.frame()
df <- cbind(newColName = rownames(df), df)
rownames(df) <- 0:(nrow(df)-1)
print(df)
df = create_dates(df)
df$Knotted_Point <- knotted_point(df)
df_annual <- df %>%
select(-DATE) %>%
group_by(Year) %>%
summarise(across(everything(), mean, na.rm = TRUE)) %>%
ungroup()
df$Desired_Point <- seq(1, nrow(df))
df$Estimated_Pop <- rep(NA, nrow(df))
df_annual$Desired_Point <- seq(1, nrow(df_annual))
df_annual$Estimated_Pop <- rep(NA, nrow(df_annual))
print(df_annual)
}
# Save to Stata and CSV
# write_dta(df, paste0(gsub(" ", "_", area), "_Quarterly.dta"))
# write_dta(df_annual, paste0(gsub(" ", "_", area), "_Annual.dta"))
# write_csv(df, paste0(gsub(" ", "_", area), "_Quarterly.csv"))
# write_csv(df_annual, paste0(gsub(" ", "_", area), "_Annual.csv"))
# Process each area
for (i in seq_along(full_data$Geography)) {
area <- full_data$Geography[i]
df <- full_data[i, ] %>% t() %>% as.data.frame()
df <- cbind(newColName = rownames(df), df)
rownames(df) <- 0:(nrow(df)-1)
df = create_dates(df)
df$Knotted_Point <- knotted_point(df)
df_annual <- df %>%
select(-DATE) %>%
group_by(Year) %>%
summarise(across(everything(), mean, na.rm = TRUE)) %>%
ungroup()
df$Desired_Point <- seq(1, nrow(df))
df$Estimated_Pop <- rep(NA, nrow(df))
df_annual$Desired_Point <- seq(1, nrow(df_annual))
df_annual$Estimated_Pop <- rep(NA, nrow(df_annual))
print(df_annual)
}
# Save to Stata and CSV
# write_dta(df, paste0(gsub(" ", "_", area), "_Quarterly.dta"))
# write_dta(df_annual, paste0(gsub(" ", "_", area), "_Annual.dta"))
# write_csv(df, paste0(gsub(" ", "_", area), "_Quarterly.csv"))
# write_csv(df_annual, paste0(gsub(" ", "_", area), "_Annual.csv"))
warnings()
# Function to create dates and additional columns
create_dates <- function(df) {
df <- df %>%
rename(DATE = 1, Quarterly_Pop = 2) %>%
mutate(Quarterly_Pop = as.numeric(Quarterly_Pop),
DATE = quarter_to_date(DATE),
Year = extract_year(DATE),
DATE = ymd(DATE))
return(df)
}
# Function to create knotted points
knotted_point <- function(df) {
seq(2, by = 3, length.out = nrow(df))
}
# Process each area
for (i in seq_along(full_data$Geography)) {
area <- full_data$Geography[i]
df <- full_data[i, ] %>% t() %>% as.data.frame()
df <- cbind(newColName = rownames(df), df)
rownames(df) <- 0:(nrow(df)-1)
df = create_dates(df)
df$Knotted_Point <- knotted_point(df)
df_annual <- df %>%
select(-DATE) %>%
group_by(Year) %>%
summarise(across(everything(), mean, na.rm = TRUE)) %>%
ungroup()
df$Desired_Point <- seq(1, nrow(df))
df$Estimated_Pop <- rep(NA, nrow(df))
df_annual$Desired_Point <- seq(1, nrow(df_annual))
df_annual$Estimated_Pop <- rep(NA, nrow(df_annual))
print(df_annual)
}
# Save to Stata and CSV
# write_dta(df, paste0(gsub(" ", "_", area), "_Quarterly.dta"))
# write_dta(df_annual, paste0(gsub(" ", "_", area), "_Annual.dta"))
# write_csv(df, paste0(gsub(" ", "_", area), "_Quarterly.csv"))
# write_csv(df_annual, paste0(gsub(" ", "_", area), "_Annual.csv"))
warnings()
# Process each area
for (i in seq_along(full_data$Geography)) {
area <- full_data$Geography[i]
print(area)
df <- full_data[i, ] %>% t() %>% as.data.frame()
df <- cbind(newColName = rownames(df), df)
rownames(df) <- 0:(nrow(df)-1)
df = create_dates(df)
df$Knotted_Point <- knotted_point(df)
df_annual <- df %>%
select(-DATE) %>%
group_by(Year) %>%
summarise(across(everything(), mean, na.rm = TRUE)) %>%
ungroup()
df$Desired_Point <- seq(1, nrow(df))
df$Estimated_Pop <- rep(NA, nrow(df))
df_annual$Desired_Point <- seq(1, nrow(df_annual))
df_annual$Estimated_Pop <- rep(NA, nrow(df_annual))
print(df_annual)
}
# Save to Stata and CSV
# write_dta(df, paste0(gsub(" ", "_", area), "_Quarterly.dta"))
# write_dta(df_annual, paste0(gsub(" ", "_", area), "_Annual.dta"))
# write_csv(df, paste0(gsub(" ", "_", area), "_Quarterly.csv"))
# write_csv(df_annual, paste0(gsub(" ", "_", area), "_Annual.csv"))
# Process each area
for (i in seq_along(full_data$Geography)) {
area <- full_data$Geography[i]
print(area)
df <- full_data[i, ] %>% t() %>% as.data.frame()
df <- cbind(newColName = rownames(df), df)
rownames(df) <- 0:(nrow(df)-1)
df = create_dates(df)
df$Knotted_Point <- knotted_point(df)
df_annual <- df %>%
select(-DATE) %>%
group_by(Year) %>%
summarise(across(everything(), mean, na.rm = TRUE),
Knotted_Point = list(Knotted_Point)) %>% # Aggregate Knotted_Point as a list
ungroup()
df$Desired_Point <- seq(1, nrow(df))
df$Estimated_Pop <- rep(NA, nrow(df))
df_annual$Desired_Point <- seq(1, nrow(df_annual))
df_annual$Estimated_Pop <- rep(NA, nrow(df_annual))
print(df_annual)
}
# Process each area
for (i in seq_along(full_data$Geography)) {
area <- full_data$Geography[i]
print(area)
df <- full_data[i, ] %>% t() %>% as.data.frame()
df <- cbind(newColName = rownames(df), df)
rownames(df) <- 0:(nrow(df)-1)
df = create_dates(df)
df$Knotted_Point <- knotted_point(df)
df_annual <- df %>%
select(-DATE) %>%
group_by(Year) %>%
summarise(across(everything(), mean),
Knotted_Point = list(Knotted_Point)) %>% # Aggregate Knotted_Point as a list
ungroup()
df$Desired_Point <- seq(1, nrow(df))
df$Estimated_Pop <- rep(NA, nrow(df))
df_annual$Desired_Point <- seq(1, nrow(df_annual))
df_annual$Estimated_Pop <- rep(NA, nrow(df_annual))
print(df_annual)
}
# Process each area
for (i in seq_along(full_data$Geography)) {
area <- full_data$Geography[i]
print(area)
df <- full_data[i, ] %>% t() %>% as.data.frame()
df <- cbind(newColName = rownames(df), df)
rownames(df) <- 0:(nrow(df)-1)
df = create_dates(df)
df$Knotted_Point <- knotted_point(df)
df_annual <- df %>%
select(-DATE) %>%
group_by(Year) %>%
summarise(across(everything(), mean)) %>% # Aggregate Knotted_Point as a list
ungroup()
df$Desired_Point <- seq(1, nrow(df))
df$Estimated_Pop <- rep(NA, nrow(df))
df_annual$Desired_Point <- seq(1, nrow(df_annual))
df_annual$Estimated_Pop <- rep(NA, nrow(df_annual))
print(df_annual)
}
# Save to Stata and CSV
# Process each area
for (i in seq_along(full_data$Geography)) {
area <- full_data$Geography[i]
print(area)
df <- full_data[i, ] %>% t() %>% as.data.frame()
df <- cbind(newColName = rownames(df), df)
rownames(df) <- 0:(nrow(df)-1)
df = create_dates(df)
df$Knotted_Point <- knotted_point(df)
df_annual <- df %>%
select(-DATE) %>%
group_by(Year) %>%
summarise(across((Knotted_Point, Quarterly_Pop), mean)) %>% # Aggregate Knotted_Point as a list
# Process each area
for (i in seq_along(full_data$Geography)) {
area <- full_data$Geography[i]
print(area)
df <- full_data[i, ] %>% t() %>% as.data.frame()
df <- cbind(newColName = rownames(df), df)
rownames(df) <- 0:(nrow(df)-1)
df = create_dates(df)
df$Knotted_Point <- knotted_point(df)
df_annual <- df %>%
select(-DATE) %>%
group_by(Year) %>%
summarise(across(c(Knotted_Point, Quarterly_Pop), mean)) %>% # Aggregate Knotted_Point as a list
ungroup()
df$Desired_Point <- seq(1, nrow(df))
df$Estimated_Pop <- rep(NA, nrow(df))
df_annual$Desired_Point <- seq(1, nrow(df_annual))
df_annual$Estimated_Pop <- rep(NA, nrow(df_annual))
print(df_annual)
}
# Process each area
for (i in seq_along(full_data$Geography)) {
area <- full_data$Geography[i]
print(area)
df <- full_data[i, ] %>% t() %>% as.data.frame()
df <- cbind(newColName = rownames(df), df)
rownames(df) <- 0:(nrow(df)-1)
df = create_dates(df)
df$Knotted_Point <- knotted_point(df)
df_annual <- df %>%
select(-DATE) %>%
group_by(Year) %>%
summarise(across(c(Knotted_Point, Quarterly_Pop), mean)) %>% # Aggregate Knotted_Point as a list
ungroup()
df$Desired_Point <- seq(1, nrow(df))
df$Estimated_Pop <- rep(NA, nrow(df))
df_annual$Desired_Point <- seq(1, nrow(df_annual))
df_annual$Estimated_Pop <- rep(NA, nrow(df_annual))
print(df)
print(df_annual)
}
# Process each area
for (i in seq_along(full_data$Geography)) {
area <- full_data$Geography[i]
print(area)
df <- full_data[i, ] %>% t() %>% as.data.frame()
df <- cbind(newColName = rownames(df), df)
df <- df[2:,]
# Process each area
for (i in seq_along(full_data$Geography)) {
area <- full_data$Geography[i]
print(area)
df <- full_data[i, ] %>% t() %>% as.data.frame()
df <- cbind(newColName = rownames(df), df)
df <- df[2:length(df),]
rownames(df) <- 0:(nrow(df)-1)
df = create_dates(df)
df$Knotted_Point <- knotted_point(df)
df_annual <- df %>%
select(-DATE) %>%
group_by(Year) %>%
summarise(across(c(Knotted_Point, Quarterly_Pop), mean)) %>% # Aggregate Knotted_Point as a list
ungroup()
df$Desired_Point <- seq(1, nrow(df))
df$Estimated_Pop <- rep(NA, nrow(df))
df_annual$Desired_Point <- seq(1, nrow(df_annual))
df_annual$Estimated_Pop <- rep(NA, nrow(df_annual))
print(df)
print(df_annual)
}
# Process each area
for (i in seq_along(full_data$Geography)) {
area <- full_data$Geography[i]
print(area)
df <- full_data[i, ] %>% t() %>% as.data.frame()
df <- cbind(newColName = rownames(df), df)
df <- df[-1,]
rownames(df) <- 0:(nrow(df)-1)
df = create_dates(df)
df$Knotted_Point <- knotted_point(df)
df_annual <- df %>%
select(-DATE) %>%
group_by(Year) %>%
summarise(across(c(Knotted_Point, Quarterly_Pop), mean)) %>% # Aggregate Knotted_Point as a list
ungroup()
df$Desired_Point <- seq(1, nrow(df))
df$Estimated_Pop <- rep(NA, nrow(df))
df_annual$Desired_Point <- seq(1, nrow(df_annual))
df_annual$Estimated_Pop <- rep(NA, nrow(df_annual))
print(df)
print(df_annual)
}
# Process each area
for (i in seq_along(full_data$Geography)) {
area <- full_data$Geography[i]
print(area)
df <- full_data[i, ] %>% t() %>% as.data.frame()
df <- cbind(newColName = rownames(df), df)
df <- df[-1,]
rownames(df) <- 0:(nrow(df)-1)
df = create_dates(df)
df$Knotted_Point <- knotted_point(df)
df_annual <- df %>%
select(-DATE) %>%
group_by(Year) %>%
summarise(across(c(Knotted_Point, Quarterly_Pop), mean)) %>% # Aggregate Knotted_Point as a list
dplyr::mutate_if(is.numeric, format, 2) %>%
ungroup()
df$Desired_Point <- seq(1, nrow(df))
df$Estimated_Pop <- rep(NA, nrow(df))
df_annual$Desired_Point <- seq(1, nrow(df_annual))
df_annual$Estimated_Pop <- rep(NA, nrow(df_annual))
print(df)
print(df_annual)
}
# Save to Stata and CSV
# write_dta(df, paste0(gsub(" ", "_", area), "_Quarterly.dta"))
# write_dta(df_annual, paste0(gsub(" ", "_", area), "_Annual.dta"))
# write_csv(df, paste0(gsub(" ", "_", area), "_Quarterly.csv"))
# write_csv(df_annual, paste0(gsub(" ", "_", area), "_Annual.csv"))
# Process each area
for (i in seq_along(full_data$Geography)) {
area <- full_data$Geography[i]
print(area)
df <- full_data[i, ] %>% t() %>% as.data.frame()
df <- cbind(newColName = rownames(df), df)
df <- df[-1,]
rownames(df) <- 0:(nrow(df)-1)
df = create_dates(df)
df$Knotted_Point <- knotted_point(df)
df_annual <- df %>%
select(-DATE) %>%
group_by(Year) %>%
summarise(across(c(Knotted_Point, Quarterly_Pop), mean)) %>% # Aggregate Knotted_Point as a list
dplyr::mutate_if(is.numeric, format, 2) %>%
ungroup()
df <- print.data.frame(df, digits = 2)
df$Desired_Point <- seq(1, nrow(df))
df$Estimated_Pop <- rep(NA, nrow(df))
df_annual$Desired_Point <- seq(1, nrow(df_annual))
df_annual$Estimated_Pop <- rep(NA, nrow(df_annual))
print(df)
print(df_annual)
}
str_extract("2020-01-01", "\\d{4}")
str_extract("2020-01-01", "\\d{3}")
str_extract("2020-01-01", "\\d{5}")
library(tidyverse)
library(lubridate)
library(nowcaster)
install.packages("nowcaster")
install.packages(nowcaster)
install.packages("INLA",
repos=c(getOption("repos"),
INLA="https://inla.r-inla-download.org/R/stable"),
dep=TRUE)
devtools::install_github("https://github.com/covid19br/nowcaster")
library(tidyverse)
library(lubridate)
library(nowcaster)
## To see Nowcasting as if we were on the verge of rise in the curve
data("sragBH")
srag_now<-sragBH |>
filter(DT_DIGITA <= "2020-07-04")
install.packages("remotes")
remotes::install_github("rfsaldanha/microdatasus")
install.packages("remotes")
remotes::install_github("rfsaldanha/microdatasus")
library(microsus)
library(microdatasus)
dengue <- fetch_datasus(2021, year_end = 2024, information_system = "SINAN-DENGUE")
dengue <- fetch_datasus(2021, year_end = 2024, information_system = "SINAN-DENGUE", uf = "SP")
dengue <- fetch_datasus(2021, year_end = 2024, information_system = "SINAN-DENGUE")
install.packages("read.dbc") #You need this package
dfs <- read.dbc("../../data/raw/Dengue/DENGAC13.dbc")
library("read.dbc")
dfs <- read.dbc("../../data/raw/Dengue/DENGAC13.dbc")
dfs <- read.dbc("../data/raw/Dengue/DENGAC13.dbc")
setwd("/Users/silaskoemen/Library/CloudStorage/OneDrive-ImperialCollegeLondon/Imperial/Thesis/src")
dfs <- read.dbc("../data/raw/Dengue/DENGAC13.dbc")
